словарь по сути это массив с добавленной к нему хэш функцией

Простой пример реализации словаря:
1) при инициализации словаря создаем список длиной = количество заданных элементов +
половина от заданных элементов. К примеру мы хотим создать словарь из 4х элементов,
тогда у нас создастся список занимающий
6 ячеек памяти = 4 базовых элемента + 2 (половина элементов)
2) когда идет присвоение элемента какой-либо ячейке данного массива, то мы это делаем
с помощью хэш функции
3) пример:
- допустим мы хотим присвоить нашему словарю такое значение: dict['foo'] = 3
- длина массива 6(расчет выше)
- берем значение foo и передаем его хэш функции
- вычисление:
    foo = 102 + 111 + 111 = 324 (сумма всех ASCII значений символов)
    индекс ячейки: 324 % 6(длина массива) = 54 = 0 (берем остаток от деления)
    значит значение 3 будет у нас находиться по 0 индексу в массиве [3 _ _ _ _ _ ]

4) может быть ситуация когда при вычислении индекса у разных ключей может получиться
одинаковый индекс, данное явление называется коллизия. Для предотвращения таких ситуаций
каждая ячейка нашего массива содержит в себе связанный список, в котором хранятся
конкретные значения ключей нашего словаря и происходит сравнение данных ключей, при
нахождении нужного ключа выдается его значение

- get O(1) ST
- set O(1) ST
- delete O(1) ST
- insert O(1) ST
- init O(N) ST